// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Profile_Service.DataAccess;

namespace Profile_Service.Migrations
{
    [DbContext(typeof(ProfileDbContext))]
    [Migration("20210506144224_DBInit")]
    partial class DBInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("Profile_Service.Entities.Follows", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("followerID")
                        .HasColumnType("int");

                    b.Property<int>("followingID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Follows");
                });

            modelBuilder.Entity("Profile_Service.Entities.Profile", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("accountID")
                        .HasColumnType("int");

                    b.Property<string>("bio")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("profileName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("userTag")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ID");

                    b.ToTable("Profiles");
                });
#pragma warning restore 612, 618
        }
    }
}
